--local entity = table.deepcopy(data.raw["generator"]["steam-engine"])
--entity.name = "crystarion-generator"
--entity.minable = { mining_time = 0.3, result = "crystarion-generator" }
--entity.fluid_usage_per_tick = 10
--entity.maximum_temperature = 200
--entity.fluid_box.volume = 400
--entity.fluid_box.filter = "crystarion-plasma"
--entity.fluid_box.minimum_temperature = 200
--entity.energy_source = { type = "electric", usage_priority = "secondary-output" }
--entity.scale_fluid_usage = true
--entity.effectivity = 1.0
--
--local item = table.deepcopy(data.raw["item"]["steam-engine"])
--item.name = "crystarion-generator"
--item.place_result = "crystarion-generator"
--
--local recipe = {
--    type = "recipe",
--    name = "crystarion-generator",
--    main_product = "crystarion-generator",
--    ingredients = {
--        { type = "item", name = "iron-plate",         amount = 10 },
--        { type = "item", name = "copper-plate",       amount = 3 },
--        { type = "item", name = "copper-cable",       amount = 2 },
--        { type = "item", name = "crystarion-crystal", amount = 2 }
--    },
--    results = {
--        { type = "item", name = "crystarion-generator", amount = 1 }
--    },
--    energy_required = 2
--}
--
--data:extend({ entity, item, recipe })
--
-- max_power = (min(fluid_max_temp, maximum_temperature) - fluid_default_temp)
-- × fluid_usage_per_tick
-- × fluid_heat_capacity
-- × effectivity
